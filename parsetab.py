
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN CAR CDR CONS DIVIDE EQ GT GTE IF LPRN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RPRN SEMIstart : lisp SEMI \n    lisp : expression\n            | bool\n            | list\n    expression : NUMBER\n    expression : LPRN PLUS expression expression RPRN\n                | LPRN MINUS expression expression RPRN\n                | LPRN MULTIPLY expression expression RPRN\n                | LPRN DIVIDE expression expression RPRN\n    expression : LPRN IF bool expression expression RPRN\n    expression : LPRN CAR list RPRN\n    bool : BOOLEAN\n    bool : LPRN AND bool bool RPRN\n            | LPRN OR bool bool RPRN\n    bool : LPRN NOT bool RPRN\n    bool : LPRN GTE expression expression RPRN\n            | LPRN LTE expression expression RPRN\n            | LPRN GT expression expression RPRN\n            | LPRN LT expression expression RPRN\n            | LPRN EQ expression expression RPRN\n            | LPRN NEQ expression expression RPRN\n    list : LPRN array RPRN \n    array : \n    array : array expression\n    list : LPRN CDR list RPRN\n    list : LPRN CONS expression list RPRN\n    '
    
_lr_action_items = {'NUMBER':([0,6,7,8,10,11,12,13,19,20,21,22,23,24,25,27,29,30,31,32,34,35,40,41,42,43,44,45,47,54,55,58,67,68,69,70,72,73,74,75,76,77,78,79,81,],[6,-5,-23,-12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-23,6,6,6,6,6,6,-24,6,-11,-15,-6,-7,-8,-9,-13,-14,-16,-17,-18,-19,-20,-21,-10,]),'LPRN':([0,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,35,37,38,40,41,42,43,44,45,47,49,54,55,58,67,68,69,70,72,73,74,75,76,77,78,79,81,],[7,-5,-23,-12,28,28,28,28,33,35,33,33,33,28,28,28,28,28,28,28,35,28,28,28,28,28,28,-23,33,33,28,28,28,28,28,28,-24,35,28,-11,-15,-6,-7,-8,-9,-13,-14,-16,-17,-18,-19,-20,-21,-10,]),'BOOLEAN':([0,8,14,16,17,18,37,38,58,72,73,74,75,76,77,78,79,],[8,-12,8,8,8,8,8,8,-15,-13,-14,-16,-17,-18,-19,-20,-21,]),'$end':([1,9,],[0,-1,]),'SEMI':([2,3,4,5,6,8,46,55,58,65,67,68,69,70,72,73,74,75,76,77,78,79,80,81,],[9,-2,-3,-4,-5,-12,-22,-11,-15,-25,-6,-7,-8,-9,-13,-14,-16,-17,-18,-19,-20,-21,-26,-10,]),'RPRN':([6,7,8,25,35,36,39,46,47,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[-5,-23,-12,46,-23,55,58,-22,-24,65,67,68,69,70,-11,72,73,-15,74,75,76,77,78,79,-25,80,-6,-7,-8,-9,81,-13,-14,-16,-17,-18,-19,-20,-21,-26,-10,]),'PLUS':([7,28,],[10,10,]),'MINUS':([7,28,],[11,11,]),'MULTIPLY':([7,28,],[12,12,]),'DIVIDE':([7,28,],[13,13,]),'IF':([7,28,],[14,14,]),'CAR':([7,28,],[15,15,]),'AND':([7,33,],[16,16,]),'OR':([7,33,],[17,17,]),'NOT':([7,33,],[18,18,]),'GTE':([7,33,],[19,19,]),'LTE':([7,33,],[20,20,]),'GT':([7,33,],[21,21,]),'LT':([7,33,],[22,22,]),'EQ':([7,33,],[23,23,]),'NEQ':([7,33,],[24,24,]),'CDR':([7,35,],[26,26,]),'CONS':([7,35,],[27,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'lisp':([0,],[2,]),'expression':([0,10,11,12,13,19,20,21,22,23,24,25,27,29,30,31,32,34,40,41,42,43,44,45,54,],[3,29,30,31,32,40,41,42,43,44,45,47,49,50,51,52,53,54,59,60,61,62,63,64,71,]),'bool':([0,14,16,17,18,37,38,],[4,34,37,38,39,56,57,]),'list':([0,15,26,49,],[5,36,48,66,]),'array':([7,35,],[25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> lisp SEMI','start',2,'p_start','LISPParser.py',11),
  ('lisp -> expression','lisp',1,'p_types','LISPParser.py',17),
  ('lisp -> bool','lisp',1,'p_types','LISPParser.py',18),
  ('lisp -> list','lisp',1,'p_types','LISPParser.py',19),
  ('expression -> NUMBER','expression',1,'p_numbers','LISPParser.py',25),
  ('expression -> LPRN PLUS expression expression RPRN','expression',5,'p_expression_aop','LISPParser.py',31),
  ('expression -> LPRN MINUS expression expression RPRN','expression',5,'p_expression_aop','LISPParser.py',32),
  ('expression -> LPRN MULTIPLY expression expression RPRN','expression',5,'p_expression_aop','LISPParser.py',33),
  ('expression -> LPRN DIVIDE expression expression RPRN','expression',5,'p_expression_aop','LISPParser.py',34),
  ('expression -> LPRN IF bool expression expression RPRN','expression',6,'p_expression','LISPParser.py',40),
  ('expression -> LPRN CAR list RPRN','expression',4,'p_expression_car','LISPParser.py',46),
  ('bool -> BOOLEAN','bool',1,'p_boolean','LISPParser.py',52),
  ('bool -> LPRN AND bool bool RPRN','bool',5,'p_boolean_logic_and_or','LISPParser.py',58),
  ('bool -> LPRN OR bool bool RPRN','bool',5,'p_boolean_logic_and_or','LISPParser.py',59),
  ('bool -> LPRN NOT bool RPRN','bool',4,'p_boolean_logic_not','LISPParser.py',65),
  ('bool -> LPRN GTE expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',71),
  ('bool -> LPRN LTE expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',72),
  ('bool -> LPRN GT expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',73),
  ('bool -> LPRN LT expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',74),
  ('bool -> LPRN EQ expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',75),
  ('bool -> LPRN NEQ expression expression RPRN','bool',5,'p_boolean_comp_op','LISPParser.py',76),
  ('list -> LPRN array RPRN','list',3,'p_list','LISPParser.py',82),
  ('array -> <empty>','array',0,'p_list_empty_array','LISPParser.py',88),
  ('array -> array expression','array',2,'p_list_array','LISPParser.py',94),
  ('list -> LPRN CDR list RPRN','list',4,'p_list_cdr','LISPParser.py',100),
  ('list -> LPRN CONS expression list RPRN','list',5,'p_list_cons','LISPParser.py',106),
]
